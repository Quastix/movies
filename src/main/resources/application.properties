# De JDBC URL die verwijst naar de database die je applicatie gebruikt.
spring.datasource.url=jdbc:mysql://localhost/movies
# De database gebruiker waarmee je applicatie de database opent.
spring.datasource.username=cursist
# Het paswoord van de gebruiker bij
spring.datasource.password=cursist

# JdbcTemplate toont hiermee de SQL-statements
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
# SimpleJdbcInsert toont hiermee de SQL statements
logging.level.org.springframework.jdbc.core.simple.SimpleJdbcInsert=DEBUG
# Spring toont zo de waarden die hij invult in de ? tekens in SQL-statements met parameters
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

# Verhinderen van session fixation 115/125 spring fundamentals p90 schrift.
# Spring stuurt de session id naar de browser altijd als een tijdelijke cookie, nooit in de URL.
server.servlet.session.tracking-modes=cookie

# Je definieert het standaard isolation level dat Spring gebruikt bij je transacties.
# Als je voor een use-case een ander isolation level nodig hebt, definieer je dat in
# die use-case.
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED

# Spring maakt in een test een DataSource die verwijst naar een database van het merk H2,
# niet naar de MySQL database gedefinieerd in application.properties.
# H2 houdt de data bij in het RAM-geheugen, niet op de harde schijf.
# H2 reageert bij het uitvoeren van een SQL-statement soms anders dan MySQL.
# Je vraagt daarom de MySQL database niet te vervangen door een H2 database.
spring.test.database.replace=none